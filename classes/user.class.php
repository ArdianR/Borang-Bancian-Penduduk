<?php

require_once('db.class.php');

class User {
    public $id;
    public $name;
    public $ic;
    public $age;
    public $gender;
    public $phone;
    public $marital_status;
    public $child_count;
    public $job;
    public $edu_stage;
    public $street_address;
    public $poscode;
    public $region;
    public $state;
    public $rank;

    public function __construct(){
        # code...
        $db = new database();
        $this->conn = $db->connect();
    }

    public function save() {
        // save the user to the db and update $this->id with autogenerated id
        $stmt = $this->conn->prepare("INSERT  INTO user ( name, ic, age, gender,
                                                          phone, marital_status,
                                                          child_count, job,
                                                          edu_stage, street_address,
                                                          poscode, region, state, f_lead ) 
                                      VALUES (:name, :ic, :age, :gender,
                                              :phone, :marital_status,
                                              :child_count, :job,
                                              :edu_stage, :street_address,
                                              :poscode, :region, :state, :f_lead)");
        $stmt->bindParam(':name', $this->name);
        $stmt->bindParam(':ic', $this->ic);
        $stmt->execute(array(
            ':name' => $this->name,
            ':ic' => $this->ic,
            ':age' => $this->age,
            ':gender' => $this->gender,
            ':phone' => $this->phone,
            ':marital_status' => $this->marital_status,
            ':child_count' => $this->child_count,
            ':job' => $this->job,
            ':edu_stage' => $this->edu_stage,
            ':street_address' => $this->street_address,
            ':poscode' => $this->poscode,
            ':region' => $this->region,
            ':state' => $this->state,
            ':f_lead' => $this->rank
            ));

        $this->id = $this->conn->lastInsertId();
    }

    public function addChild(User $child) {
        // add to `Relations`: [$this->id, $child->id, 'father']
        // then add to `Relations`: [$child->id, $this->id, 'child']
        $stmt = $this->conn->prepare("INSERT  INTO relation ( owner_id, family_member_id, relation) VALUES (:id1, :id2, :relationship)");
        $stmt->bindParam(':id1', $this->id);
        $stmt->bindParam(':id2', $child->id);
        $stmt->bindParam(':relationship', $relationship);
        $relationship = "Anak";
        $stmt->execute();
        $stmt->bindParam(':id1', $child->id);
        $stmt->bindParam(':id2', $this->id);
        $stmt->bindParam(':relationship', $relationship);
        $relationship = "Ayah";
        $stmt->execute();
    }

    public function addWife(User $wife) {
        // check if  this user already has a wife and throw an Exception "Wife already exists"
        // 
        // add to `Relations`: [$this->id, $wife->id, 'husband']
        // then add to `Relations`: [$wife->id, $this->id, 'wife']
        $stmt = $this->conn->prepare("INSERT  INTO relation ( owner_id, family_member_id, relation) VALUES (:id1, :id2, :relationship)");
        $stmt->bindParam(':id1', $this->id);
        $stmt->bindParam(':id2', $wife->id);
        $stmt->bindParam(':relationship', $relationship);
        $relationship = "Isteri";
        $stmt->execute();
        $stmt->bindParam(':id1', $wife->id);
        $stmt->bindParam(':id2', $this->id);
        $stmt->bindParam(':relationship', $relationship);
        $relationship = "Suami";
        $stmt->execute();
    }

    public function addHusband(User $husband) {
        // check if  this user already has a husband and throw an Exception "Wife already exists"
        // 
        // add to `Relations`: [$this->id, $husband->id, 'husband']
        // then add to `Relations`: [$husband->id, $this->id, 'wife']
        $stmt = $this->conn->prepare("INSERT  INTO relation ( owner_id, family_member_id, relation) VALUES (:id1, :id2, :relationship)");
        $stmt->bindParam(':id1', $this->id);
        $stmt->bindParam(':id2', $husband->id);
        $stmt->bindParam(':relationship', $relationship);
        $relationship = "Suami";
        $stmt->execute();
        $stmt->bindParam(':id1', $husband->id);
        $stmt->bindParam(':id2', $this->id);
        $stmt->bindParam(':relationship', $relationship);
        $relationship = "Isteri";
        $stmt->execute();
    }

    public function addfather(User $father) {
        // check if  this user already has a wife and throw an Exception "Wife already exists"
        // 
        // add to `Relations`: [$this->id, $father->id, 'father']
        // then add to `Relations`: [$father->id, $this->id, 'child']
        $stmt = $this->conn->prepare("INSERT  INTO relation ( owner_id, family_member_id, relation) VALUES (:id1, :id2, :relationship)");
        $stmt->bindParam(':id1', $this->id);
        $stmt->bindParam(':id2', $father->id);
        $stmt->bindParam(':relationship', $relationship);
        $relationship = "Ayah";
        $stmt->execute();
        $stmt->bindParam(':id1', $father->id);
        $stmt->bindParam(':id2', $this->id);
        $stmt->bindParam(':relationship', $relationship);
        $relationship = "Anak";
        $stmt->execute();
    }

    public function addMother(User $mother) {
        // check if  this user already has a wife and throw an Exception "Wife already exists"
        // 
        // add to `Relations`: [$this->id, $mother->id, 'mother']
        // then add to `Relations`: [$mother->id, $this->id, 'child']
        $stmt = $this->conn->prepare("INSERT  INTO relation ( owner_id, family_member_id, relation) VALUES (:id1, :id2, :relationship)");
        $stmt->bindParam(':id1', $this->id);
        $stmt->bindParam(':id2', $mother->id);
        $stmt->bindParam(':relationship', $relationship);
        $relationship = "Emak";
        $stmt->execute();
        $stmt->bindParam(':id1', $mother->id);
        $stmt->bindParam(':id2', $this->id);
        $stmt->bindParam(':relationship', $relationship);
        $relationship = "Anak";
        $stmt->execute();
    }

    public function addRelative($relationship, User $relative) {
        switch ($relationship) {
            case 'child':
                $this->addChild($relative);
                break;

            case 'wife':
                $this->addWife($relative);
                break;

             case 'husband':
                $this->addHusband($relative);
                break;

            case 'father':
                $this->addFather($relative);
                break;

            case 'mother':
                $this->addMother($relative);
                break;

            default:
                throw new Exception("Unknown relationship:" . $relationship);
                break;
        }
    }
}